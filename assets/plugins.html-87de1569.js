import{_ as e,o as i,c as n,e as a}from"./app-2c680f2e.js";const r={},t=a('<h1 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> Plugins</h1><h2 id="plugin-manager" tabindex="-1"><a class="header-anchor" href="#plugin-manager" aria-hidden="true">#</a> Plugin Manager</h2><ul><li>wbthomason/packer.nvim - A use-package inspired plugin manager. Uses native packages, supports Luarocks dependencies, written in Lua, allows for expressive config.</li><li>savq/paq-nvim - Neovim package manager written in Lua.</li><li>NTBBloodbath/cheovim - Neovim configuration switcher written in Lua. Inspired by chemacs.</li><li>chiyadev/dep - An alternative to packer.nvim. It was built to be even better and easier to use. Context can be found here.</li><li>folke/lazy.nvim - A modern plugin manager, featuring a graphical interface, async execution, a lockfile and more zzz.</li></ul><h2 id="lsp" tabindex="-1"><a class="header-anchor" href="#lsp" aria-hidden="true">#</a> LSP</h2><ul><li>neovim/nvim-lspconfig - Quickstart configurations for the LSP client.</li><li>nvim-lua/lsp-status.nvim - This is a plugin/library for generating statusline components from the built-in LSP client.</li></ul><h3 id="lsp-installer" tabindex="-1"><a class="header-anchor" href="#lsp-installer" aria-hidden="true">#</a> LSP Installer</h3><ul><li>anott03/nvim-lspinstall - Easy to install language servers.</li><li>alexaandru/nvim-lspupdate - Updates installed (or auto installs if missing) LSP servers.</li><li>williamboman/mason.nvim - Portable package manager that runs everywhere Neovim runs. Easily install and manage LSP servers, DAP servers, linters, and formatters.</li></ul><h2 id="completion" tabindex="-1"><a class="header-anchor" href="#completion" aria-hidden="true">#</a> Completion</h2><ul><li>ms-jpq/coq_nvim - Fast as FUCK Neovim completion. SQLite, concurrent scheduler, hundreds of hours of optimization.</li><li>hrsh7th/nvim-cmp - A completion plugin written in Lua. New version of nvim-compe.</li><li>lukas-reineke/cmp-under-comparator - A nvim-cmp function for better sorting.</li><li>echasnovski/mini.nvim#mini.completion - Module of mini.nvim for asynchronous two-stage completion. Supports showing completion item info and independent function signature.</li><li>noib3/nvim-compleet - A Neovim autocompletion framework written in Rust.</li><li>vigoux/complementree.nvim - Light and synchronous completion plugin based on tree-sitter and with a functional-programming interface.</li><li>simrat39/rust-tools.nvim - Tools for better development in Rust using Neovim&#39;s builtin LSP.</li><li>zbirenbaum/copilot.lua - Fully featured Lua replacement for GitHub/copilot.vim.</li></ul><h2 id="programming-languages-support" tabindex="-1"><a class="header-anchor" href="#programming-languages-support" aria-hidden="true">#</a> Programming Languages Support</h2><ul><li>Julian/lean.nvim - Neovim support for the Lean Theorem Prover.</li><li>akinsho/flutter-tools.nvim - Build Flutter and Dart applications using the native LSP.</li><li>gbprod/phpactor.nvim - Lua version of the Phpactor Vim plugin to take advantage of the latest Neovim features.</li><li>brendalf/mix.nvim - Mix (from Elixir) wrapper plugin.</li><li>AckslD/swenv.nvim - Tiny plugin to quickly switch Python virtual environments without restarting.</li><li>gennaro-tedesco/nvim-jqx - Interactive interface for JSON files.</li><li>nanotee/sqls.nvim - SQL database connection plugin + LSP client.</li><li>dmmulroy/tsc.nvim - Asynchronous project-wide TypeScript type-checking using the TypeScript compiler (TSC) with results loaded into a quickfix list.</li></ul><h3 id="web-development" tabindex="-1"><a class="header-anchor" href="#web-development" aria-hidden="true">#</a> Web Development</h3><ul><li>NTBBloodbath/rest.nvim - A fast Neovim HTTP client written in Lua.</li><li>ray-x/web-tools.nvim - Launch a local development server with live reload feature for static &amp; dynamic pages, HTML &amp; CSS tag rename with LSP.</li></ul><h3 id="markdown-and-latex" tabindex="-1"><a class="header-anchor" href="#markdown-and-latex" aria-hidden="true">#</a> Markdown and LaTeX</h3><ul><li>ellisonleao/glow.nvim - Markdown preview using glow.</li><li>iamcco/markdown-preview.nvim - Preview markdown on your modern browser with synchronised scrolling and flexible configuration.</li><li>davidgranstrom/nvim-markdown-preview - Markdown preview in the browser using pandoc and live-server through Neovim&#39;s job-control API.</li><li>jghauser/auto-pandoc.nvim - Easy pandoc conversion leveraging yaml blocks.</li><li>jghauser/follow-md-links.nvim - Press enter to follow internal markdown links.</li><li>jubnzv/mdeval.nvim - Evaluate code blocks inside markdown documents.</li><li>kdheepak/panvimdoc - A pandoc to vimdoc GitHub action.</li><li>frabjous/knap - Plugin for creating automatic updating-as-you-type previews for markdown, LaTeX and other documents.</li><li>jbyuki/carrot.nvim - Markdown evaluator Lua code blocks.</li><li>AckslD/nvim-FeMaco.lua - Catalyze your Fenced Markdown Code-block editing.</li><li>NFrid/markdown-togglecheck - Simple Neovim plugin for toggling check boxes using Treesitter.</li><li>toppair/peek.nvim - Preview markdown in a webview window.</li><li>yaocccc/nvim-hl-mdcodeblock.lua - Highlight markdown codeblock using Tree-sitter.</li><li>kiran94/edit-markdown-table.nvim - Edit Markdown Tables using Tree-sitter.</li></ul><h2 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax" aria-hidden="true">#</a> Syntax</h2><ul><li>nvim-treesitter/nvim-treesitter - Neovim Treesitter configurations and abstraction layer.</li><li>nvim-treesitter/nvim-treesitter-textobjects - Create your own textobjects using tree-sitter queries.</li><li>RRethy/nvim-treesitter-textsubjects - Location and syntax aware text objects which do what you mean.</li><li>kylechui/nvim-surround - A plugin for adding/changing/deleting surrounding delimiter pairs.</li><li>echasnovski/mini.nvim#mini.surround - Module of mini.nvim for working with text surroundings (add, delete, replace, find, highlight). Supports dot-repeat, different search methods, &quot;last&quot;/&quot;next&quot; extended mappings, tree-sitter integration, and more.</li><li>m-demare/hlargs.nvim - Highlight arguments&#39; definitions and usages, using Treesitter.</li><li>LhKipp/nvim-nu - Basic editor support for the nushell language. desdic/agrolens.nvim - Navigate via Tree-sitter nodes using Telescope.</li></ul><h2 id="snippet" tabindex="-1"><a class="header-anchor" href="#snippet" aria-hidden="true">#</a> Snippet</h2><ul><li>norcalli/snippets.nvim - Snippets in Lua.</li><li>L3MON4D3/LuaSnip - A snippet engine written in Lua.</li><li>smjonas/snippet-converter.nvim - Convert snippets between the most common snippet formats and modify them using a few lines of Lua code.</li><li>dcampos/nvim-snippy - Snippet plugin written in Lua with support for vim-snippets.</li><li>ellisonleao/carbon-now.nvim - Create beautiful code snippets directly from Neovim.</li><li>TobinPalmer/rayso.nvim - Create code snippets in Neovim using ray.so.</li></ul><h2 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> Search</h2><ul><li>kevinhwang91/nvim-hlslens - Helps you better glance searched information, seamlessly jump matched instances.</li><li>rktjmp/highlight-current-n.nvim - Highlights the current /, ? or * match under your cursor when pressing n or N and gets out of the way afterwards.</li><li>gaborvecsei/memento.nvim - Keeps track of your visited file history after a buffer is closed. Reopen files more easily.</li><li>ray-x/sad.nvim - Space Age seD in neovim. Batch file edit tool, a wrapper for sad</li><li>s1n7ax/nvim-search-and-replace - Search and replace in multiple files at the same time from the current working directory.</li><li>roobert/search-replace.nvim - Brings better features to the native search and replace experience.</li><li>AckslD/muren.nvim - Multiple replacements through interactive UI.</li></ul><h2 id="fuzzy-finder" tabindex="-1"><a class="header-anchor" href="#fuzzy-finder" aria-hidden="true">#</a> Fuzzy Finder</h2><ul><li>nvim-telescope/telescope.nvim - Telescope.nvim is a highly extendable fuzzy finder over lists. Built on the latest awesome features from Neovim core. Telescope is centered around modularity, allowing for easy customization.</li><li>vijaymarupudi/nvim-fzf - A Lua API for using FZF (Neovim &gt;= 0.5). Allows for full asynchronicity for UI speed and usability.</li><li>camspiers/snap - An extensible fuzzy finder. Similar to Telescope, and optimized for performance, especially when grepping in large codebases.</li><li>ibhagwan/fzf-lua - The Lua version of fzf.vim, high-performance and fully async, supports nvim-web-devicons, git indicators, LSP, quickfix/location lists and more. Also supports skim as its fzf binary.</li><li>jvgrootveld/telescope-zoxide - Telescope integration for zoxide, a smart directory picker that tracks your usage.</li><li>echasnovski/mini.nvim#mini.fuzzy - Module of mini.nvim with functions to perform fuzzy matching of one string to others along with fast Telescope sorter.</li><li>axkirillov/easypick.nvim - Easypick lets you easily create Telescope pickers from arbitrary console commands.</li></ul><h2 id="file-explorer" tabindex="-1"><a class="header-anchor" href="#file-explorer" aria-hidden="true">#</a> File Explorer</h2><ul><li>kyazdani42/nvim-tree.lua - A simple and fast file explorer tree.</li><li>luukvbaal/nnn.nvim - File explorer powered by nnn and Lua.</li><li>tamago324/lir.nvim - Simple file explorer.</li><li>TimUntersberger/neofs - A file manager written in Lua.</li><li>kevinhwang91/rnvimr - A simple yet amazing file explorer.</li><li>Xuyuanp/yanil - Yet Another Nerdtree In Lua.</li><li>ms-jpq/chadtree - File manager. Better than NERDTree.</li><li>is0n/fm-nvim - Neovim plugin that lets you use your favorite terminal file managers (and fuzzy finders).</li><li>nvim-neo-tree/neo-tree.nvim - Neo-tree is a Neovim plugin to browse the file system and other tree like structures in whatever style suits you, including sidebars, floating windows, netrw split style, or all of them at once.</li><li>elihunter173/dirbuf.nvim - A file manager which lets you edit your filesystem like you edit text.</li><li>theblob42/drex.nvim - A simple and configurable file explorer written in Lua.</li><li>SidOfc/carbon.nvim - The simple directory tree viewer written in Lua.</li><li>dinhhuy258/sfm.nvim - An alternative to Nvim-tree designed to be extensible and minimalist.</li><li>kiran94/s3edit.nvim - Edit files from Amazon S3 directly from Neovim.</li><li>stevearc/oil.nvim - Edit your filesystem like a buffer.</li><li>kelly-lin/ranger.nvim - Ranger integration for neovim.</li><li>echasnovski/mini.nvim#mini.files - Module of mini.nvim providing file explorer with column view capable of manipulating file system by editing text. Can create/delete/rename/copy/move files/directories inside and across directories.</li></ul><h2 id="project" tabindex="-1"><a class="header-anchor" href="#project" aria-hidden="true">#</a> Project</h2>',26),l=[t];function o(s,m){return i(),n("div",null,l)}const u=e(r,[["render",o],["__file","plugins.html.vue"]]);export{u as default};
